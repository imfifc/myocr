syntax = "proto3";
package ocr_structuring;

message ImageData {
    int32 width = 1;
    int32 height = 2;
    int32 channels = 3;
    bytes data = 4;
    string shm = 5;
}

message RotatedBox {
    int32 x1 = 1;
    int32 y1 = 2;
    int32 x2 = 3;
    int32 y2 = 4;
    int32 x3 = 5;
    int32 y3 = 6;
    int32 x4 = 7;
    int32 y4 = 8;
    float angle = 9;
}

message BBox {
    int32 left = 1;
    int32 top = 2;
    int32 right = 3;
    int32 bottom = 4;
}

message TextFullDataRotated {
    string word = 1;
    RotatedBox rbox = 2;
    int32 label = 3;
    repeated float probabilities = 4;
}

message StructuringRequestRotated {
    repeated TextFullDataRotated texts_full_data = 1;
    string version = 2;
    ImageData image_data = 3;
    string class_name = 4;
    int32 primary_class = 5;
    int32 secondary_class = 6;
    repeated RotatedBoxWithLabel labeled_bbox_list = 7;
    repeated SingleDetectionResult detection_results = 8;
}

message TextFullData {
    string word = 1;
    BBox bbox = 2;
    int32 label = 3;
    repeated float probabilities = 4;
}

message RotatedBoxWithLabel {
    RotatedBox bbox = 1;
    int32 label = 3;
}

message StructuringRequest {
    repeated TextFullData texts_full_data = 1;
    string version = 2;
    ImageData image_data = 3;
    string class_name = 4;
    int32 primary_class = 5;
    int32 secondary_class = 6;
    repeated RotatedBoxWithLabel labeled_bbox_list = 7;
    repeated SingleDetectionResult detection_results = 8;
}

message SingleDetectionResult {
    repeated RotatedBoxWithLabel labeled_bbox_list = 7;
}

message StructuringTimeInfo {
    int64 elapsed_time = 1;
}

message StructuringResponse {
    int32 code = 1;
    string message = 2;
    string data = 3;
    StructuringTimeInfo time_info = 4;
    string meta = 5;
}

message SingleImageInfo {
    repeated TextFullDataRotated texts_full_data = 1;
    ImageData image_data = 2;
    repeated RotatedBoxWithLabel labeled_bbox_list = 3;
    repeated SingleDetectionResult detection_results = 4;
}

message MultiImageStructuringRequest {
    repeated SingleImageInfo multi_image_info =1;
    string version = 2;
    string class_name = 3;
}

service Structuring {
    rpc Process (StructuringRequest) returns (StructuringResponse) {
    }

    rpc ProcessRotated (StructuringRequestRotated) returns (StructuringResponse) {
    }

    rpc ProcessMultiImage (MultiImageStructuringRequest) returns (StructuringResponse) {
    }
}
